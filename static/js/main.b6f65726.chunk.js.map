{"version":3,"sources":["components/Filter/Filter.module.css","components/Section/Section.module.css","components/Section/Section.js","redux/actions.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Section","title","children","className","s","section","contactsActions","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","form","onSubmit","preventDefault","find","contact","alert","label","input","type","placeholder","onChange","button","ContactList","map","li","onClick","onDeleteContact","Filter","App","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b6f65726.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3iswU\",\"input\":\"Filter_input__EFHVs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__32ZKA\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css'\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <div className={s.section}>\r\n      <h2 className=\"\">{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = createAction('phonebook/add', (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\nconst deleteContact = createAction('phonebook/delete');\r\nconst changeFilter = createAction('phonebook/changeFilter');\r\n\r\nconst contactsActions = { addContact, deleteContact, changeFilter };\r\nexport default contactsActions;","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};","import { useState } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport contactsActions from '../../redux/actions';\r\nimport { getContacts } from '../../redux/selectors';\r\n\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  \r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n     if (contacts.find(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts.`);\r\n      reset();\r\n      return;\r\n    }\r\n    dispatch(contactsActions.addContact(name, number));\r\n    reset();\r\n  }  \r\n  \r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  } \r\n\r\n  \r\n    return (\r\n      <form\r\n      className={s.form}\r\n        onSubmit={handleSubmit}>\r\n        <label\r\n          className={s.label}>\r\n          Name\r\n          <input \r\n            className ={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n             placeholder=\"Go IT\"\r\n            onChange={handleChange}\r\n            \r\n          />\r\n        </label>\r\n        <label\r\n            className={s.label}     \r\n          >\r\n          Number\r\n          <input\r\n            className ={s.input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n             placeholder=\"000-000-000\"\r\n            onChange={handleChange}\r\n            \r\n          />\r\n        </label>\r\n\r\n        <button\r\n          className={s.button}\r\n          type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n\r\n\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport contactsActions from '../../redux/actions';\r\nimport { getVisibleContacts } from '../../redux/selectors';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList () {const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(contactsActions.deleteContact(id));\r\n  <ul className=\"\">\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li\r\n        className={s.li}\r\n        key={id}>\r\n        <span className={s.name}>{name}:</span>\r\n        <span className={s.number}>{number}</span>\r\n        <button\r\n          className={s.button}\r\n          type=\"button\"\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>}\r\n  \r\n\r\n  \r\n\r\n","\r\nimport s from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/selectors';\r\nimport contactsActions from '../../redux/actions';\r\n\r\n\r\nexport default function Filter()  {\r\nconst value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(contactsActions.changeFilter(e.target.value));\r\n\r\n  <label className={s.filter}>\r\n    Find contacts by name\r\n    <input className= {s.input} type='text' value={value} onChange={onChange}  placeholder=\"Go IT\"/>\r\n  </label>\r\n}\r\n\r\n","\nimport Section from './components/Section/Section'\nimport ContactForm from './components/ContactForm/ContactForm'\nimport ContactList from './components/ContactList/ContactList'\nimport Filter from './components/Filter/Filter'\n\n\n\nexport default function App()  {\n  \n  \n    return (\n      <>\n      <Section title=\"Phonebook\">\n          <ContactForm />\n      </Section>\n      <Section title=\"Phonebook\">\n      <Filter />\n          <ContactList />\n          </Section>\n      </>\n    );\n  }\n\n\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\n\r\n\r\nconst initialContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n];\r\n\r\n\r\nconst items = createReducer(initialContacts, {\r\n  [actions.addContact]: (state, { payload }) => [payload, ...state],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './reducers';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(phonebookPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2MCj5\",\"button\":\"ContactForm_button__4eogV\",\"input\":\"ContactForm_input__28z7S\",\"label\":\"ContactForm_label__3XXJd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactList_name__11G4S\",\"number\":\"ContactList_number__arjrS\",\"button\":\"ContactList_button__1NFsC\",\"li\":\"ContactList_li__i7p8w\"};"],"sourceRoot":""}